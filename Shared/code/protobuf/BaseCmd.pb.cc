// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseCmd.proto

#include "BaseCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseCmd_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseCmd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_sUser_ePhoneNumber;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseCmd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_sUser;
}  // namespace protobuf_BaseCmd_2eproto
namespace BaseCmd {
class CmdTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdType>
      _instance;
} _CmdType_default_instance_;
class notifyConnectionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<notifyConnectionStatus>
      _instance;
} _notifyConnectionStatus_default_instance_;
class sUser_ePhoneNumberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sUser_ePhoneNumber>
      _instance;
} _sUser_ePhoneNumber_default_instance_;
class sUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sUser>
      _instance;
} _sUser_default_instance_;
class reqSigninDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<reqSignin>
      _instance;
} _reqSignin_default_instance_;
class rspSigninDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rspSignin>
      _instance;
} _rspSignin_default_instance_;
class reqMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<reqMove>
      _instance;
} _reqMove_default_instance_;
class rspMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rspMove>
      _instance;
} _rspMove_default_instance_;
class reqAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<reqAlarm>
      _instance;
} _reqAlarm_default_instance_;
class rspAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rspAlarm>
      _instance;
} _rspAlarm_default_instance_;
}  // namespace BaseCmd
namespace protobuf_BaseCmd_2eproto {
static void InitDefaultsCmdType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_CmdType_default_instance_;
    new (ptr) ::BaseCmd::CmdType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::CmdType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdType}, {}};

static void InitDefaultsnotifyConnectionStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_notifyConnectionStatus_default_instance_;
    new (ptr) ::BaseCmd::notifyConnectionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::notifyConnectionStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_notifyConnectionStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsnotifyConnectionStatus}, {}};

static void InitDefaultssUser_ePhoneNumber() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_sUser_ePhoneNumber_default_instance_;
    new (ptr) ::BaseCmd::sUser_ePhoneNumber();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::sUser_ePhoneNumber::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_sUser_ePhoneNumber =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssUser_ePhoneNumber}, {}};

static void InitDefaultssUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_sUser_default_instance_;
    new (ptr) ::BaseCmd::sUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::sUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_sUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssUser}, {
      &protobuf_BaseCmd_2eproto::scc_info_sUser_ePhoneNumber.base,}};

static void InitDefaultsreqSignin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_reqSignin_default_instance_;
    new (ptr) ::BaseCmd::reqSignin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::reqSignin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_reqSignin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsreqSignin}, {
      &protobuf_BaseCmd_2eproto::scc_info_sUser.base,}};

static void InitDefaultsrspSignin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_rspSignin_default_instance_;
    new (ptr) ::BaseCmd::rspSignin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::rspSignin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rspSignin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrspSignin}, {}};

static void InitDefaultsreqMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_reqMove_default_instance_;
    new (ptr) ::BaseCmd::reqMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::reqMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_reqMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreqMove}, {}};

static void InitDefaultsrspMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_rspMove_default_instance_;
    new (ptr) ::BaseCmd::rspMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::rspMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rspMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrspMove}, {}};

static void InitDefaultsreqAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_reqAlarm_default_instance_;
    new (ptr) ::BaseCmd::reqAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::reqAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_reqAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsreqAlarm}, {}};

static void InitDefaultsrspAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BaseCmd::_rspAlarm_default_instance_;
    new (ptr) ::BaseCmd::rspAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BaseCmd::rspAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rspAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrspAlarm}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CmdType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_notifyConnectionStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_sUser_ePhoneNumber.base);
  ::google::protobuf::internal::InitSCC(&scc_info_sUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_reqSignin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rspSignin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_reqMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rspMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_reqAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rspAlarm.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::CmdType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::CmdType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::CmdType, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::CmdType, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::CmdType, fromip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::CmdType, toip_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::notifyConnectionStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::notifyConnectionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::notifyConnectionStatus, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser_ePhoneNumber, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser_ePhoneNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser_ePhoneNumber, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser_ePhoneNumber, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::sUser, phones_),
  0,
  2,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqSignin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqSignin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqSignin, user_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspSignin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspSignin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspSignin, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspSignin, succ_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqMove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqMove, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqMove, angle_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspMove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspMove, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::reqAlarm, infomessage_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BaseCmd::rspAlarm, error_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::BaseCmd::CmdType)},
  { 13, 19, sizeof(::BaseCmd::notifyConnectionStatus)},
  { 20, 27, sizeof(::BaseCmd::sUser_ePhoneNumber)},
  { 29, 38, sizeof(::BaseCmd::sUser)},
  { 42, 48, sizeof(::BaseCmd::reqSignin)},
  { 49, 56, sizeof(::BaseCmd::rspSignin)},
  { 58, 65, sizeof(::BaseCmd::reqMove)},
  { 67, 73, sizeof(::BaseCmd::rspMove)},
  { 74, 80, sizeof(::BaseCmd::reqAlarm)},
  { 81, 87, sizeof(::BaseCmd::rspAlarm)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_CmdType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_notifyConnectionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_sUser_ePhoneNumber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_sUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_reqSignin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_rspSignin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_reqMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_rspMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_reqAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BaseCmd::_rspAlarm_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "BaseCmd.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rBaseCmd.proto\022\007BaseCmd\"C\n\007CmdType\022\014\n\004t"
      "ype\030\001 \002(\t\022\014\n\004size\030\002 \002(\005\022\016\n\006fromip\030\003 \001(\t\022"
      "\014\n\004toip\030\004 \001(\t\"\253\001\n\026notifyConnectionStatus"
      "\022A\n\006status\030\001 \002(\01621.BaseCmd.notifyConnect"
      "ionStatus.eConnectionStatus\"N\n\021eConnecti"
      "onStatus\022\022\n\016ConnectSuccess\020\000\022\021\n\rConnectF"
      "ailed\020\001\022\022\n\016ConnectionLost\020\002\"\332\001\n\005sUser\022\014\n"
      "\004name\030\001 \002(\t\022\n\n\002id\030\002 \002(\005\022\r\n\005email\030\003 \001(\t\022+"
      "\n\006phones\030\004 \003(\0132\033.BaseCmd.sUser.ePhoneNum"
      "ber\032M\n\014ePhoneNumber\022\016\n\006number\030\001 \002(\t\022-\n\004t"
      "ype\030\002 \001(\0162\031.BaseCmd.sUser.ePhoneType:\004HO"
      "ME\",\n\nePhoneType\022\n\n\006MOBILE\020\000\022\010\n\004HOME\020\001\022\010"
      "\n\004WORK\020\002\")\n\treqSignin\022\034\n\004user\030\001 \003(\0132\016.Ba"
      "seCmd.sUser\"\'\n\trspSignin\022\014\n\004name\030\001 \002(\t\022\014"
      "\n\004succ\030\002 \002(\010\")\n\007reqMove\022\017\n\007forward\030\001 \002(\002"
      "\022\r\n\005angle\030\002 \002(\002\"\030\n\007rspMove\022\r\n\005error\030\001 \002("
      "\t\"\037\n\010reqAlarm\022\023\n\013infomessage\030\001 \002(\t\"\031\n\010rs"
      "pAlarm\022\r\n\005error\030\001 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 701);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BaseCmd.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_BaseCmd_2eproto
namespace BaseCmd {
const ::google::protobuf::EnumDescriptor* notifyConnectionStatus_eConnectionStatus_descriptor() {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseCmd_2eproto::file_level_enum_descriptors[0];
}
bool notifyConnectionStatus_eConnectionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const notifyConnectionStatus_eConnectionStatus notifyConnectionStatus::ConnectSuccess;
const notifyConnectionStatus_eConnectionStatus notifyConnectionStatus::ConnectFailed;
const notifyConnectionStatus_eConnectionStatus notifyConnectionStatus::ConnectionLost;
const notifyConnectionStatus_eConnectionStatus notifyConnectionStatus::eConnectionStatus_MIN;
const notifyConnectionStatus_eConnectionStatus notifyConnectionStatus::eConnectionStatus_MAX;
const int notifyConnectionStatus::eConnectionStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* sUser_ePhoneType_descriptor() {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseCmd_2eproto::file_level_enum_descriptors[1];
}
bool sUser_ePhoneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const sUser_ePhoneType sUser::MOBILE;
const sUser_ePhoneType sUser::HOME;
const sUser_ePhoneType sUser::WORK;
const sUser_ePhoneType sUser::ePhoneType_MIN;
const sUser_ePhoneType sUser::ePhoneType_MAX;
const int sUser::ePhoneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CmdType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdType::kTypeFieldNumber;
const int CmdType::kSizeFieldNumber;
const int CmdType::kFromipFieldNumber;
const int CmdType::kToipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdType::CmdType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_CmdType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.CmdType)
}
CmdType::CmdType(const CmdType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  fromip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromip()) {
    fromip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromip_);
  }
  toip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_toip()) {
    toip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toip_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:BaseCmd.CmdType)
}

void CmdType::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

CmdType::~CmdType() {
  // @@protoc_insertion_point(destructor:BaseCmd.CmdType)
  SharedDtor();
}

void CmdType::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdType::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdType& CmdType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_CmdType.base);
  return *internal_default_instance();
}


void CmdType::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.CmdType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      fromip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      toip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  size_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CmdType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.CmdType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.CmdType.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fromip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromip().data(), static_cast<int>(this->fromip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.CmdType.fromip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string toip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toip().data(), static_cast<int>(this->toip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.CmdType.toip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.CmdType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.CmdType)
  return false;
#undef DO_
}

void CmdType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.CmdType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.CmdType.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required int32 size = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // optional string fromip = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromip().data(), static_cast<int>(this->fromip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.CmdType.fromip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fromip(), output);
  }

  // optional string toip = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toip().data(), static_cast<int>(this->toip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.CmdType.toip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->toip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.CmdType)
}

::google::protobuf::uint8* CmdType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.CmdType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.CmdType.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required int32 size = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // optional string fromip = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromip().data(), static_cast<int>(this->fromip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.CmdType.fromip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fromip(), target);
  }

  // optional string toip = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toip().data(), static_cast<int>(this->toip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.CmdType.toip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->toip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.CmdType)
  return target;
}

size_t CmdType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:BaseCmd.CmdType)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_size()) {
    // required int32 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  return total_size;
}
size_t CmdType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.CmdType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required int32 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string fromip = 3;
    if (has_fromip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromip());
    }

    // optional string toip = 4;
    if (has_toip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->toip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.CmdType)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.CmdType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.CmdType)
    MergeFrom(*source);
  }
}

void CmdType::MergeFrom(const CmdType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.CmdType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_fromip();
      fromip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromip_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_toip();
      toip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toip_);
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CmdType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.CmdType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdType::CopyFrom(const CmdType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.CmdType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void CmdType::Swap(CmdType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdType::InternalSwap(CmdType* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fromip_.Swap(&other->fromip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  toip_.Swap(&other->toip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdType::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void notifyConnectionStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int notifyConnectionStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

notifyConnectionStatus::notifyConnectionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_notifyConnectionStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.notifyConnectionStatus)
}
notifyConnectionStatus::notifyConnectionStatus(const notifyConnectionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:BaseCmd.notifyConnectionStatus)
}

void notifyConnectionStatus::SharedCtor() {
  status_ = 0;
}

notifyConnectionStatus::~notifyConnectionStatus() {
  // @@protoc_insertion_point(destructor:BaseCmd.notifyConnectionStatus)
  SharedDtor();
}

void notifyConnectionStatus::SharedDtor() {
}

void notifyConnectionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* notifyConnectionStatus::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const notifyConnectionStatus& notifyConnectionStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_notifyConnectionStatus.base);
  return *internal_default_instance();
}


void notifyConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.notifyConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool notifyConnectionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.notifyConnectionStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .BaseCmd.notifyConnectionStatus.eConnectionStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BaseCmd::notifyConnectionStatus_eConnectionStatus_IsValid(value)) {
            set_status(static_cast< ::BaseCmd::notifyConnectionStatus_eConnectionStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.notifyConnectionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.notifyConnectionStatus)
  return false;
#undef DO_
}

void notifyConnectionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.notifyConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .BaseCmd.notifyConnectionStatus.eConnectionStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.notifyConnectionStatus)
}

::google::protobuf::uint8* notifyConnectionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.notifyConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .BaseCmd.notifyConnectionStatus.eConnectionStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.notifyConnectionStatus)
  return target;
}

size_t notifyConnectionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.notifyConnectionStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .BaseCmd.notifyConnectionStatus.eConnectionStatus status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void notifyConnectionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.notifyConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const notifyConnectionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const notifyConnectionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.notifyConnectionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.notifyConnectionStatus)
    MergeFrom(*source);
  }
}

void notifyConnectionStatus::MergeFrom(const notifyConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.notifyConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void notifyConnectionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.notifyConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void notifyConnectionStatus::CopyFrom(const notifyConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.notifyConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool notifyConnectionStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void notifyConnectionStatus::Swap(notifyConnectionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void notifyConnectionStatus::InternalSwap(notifyConnectionStatus* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata notifyConnectionStatus::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void sUser_ePhoneNumber::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sUser_ePhoneNumber::kNumberFieldNumber;
const int sUser_ePhoneNumber::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sUser_ePhoneNumber::sUser_ePhoneNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_sUser_ePhoneNumber.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.sUser.ePhoneNumber)
}
sUser_ePhoneNumber::sUser_ePhoneNumber(const sUser_ePhoneNumber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_number()) {
    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:BaseCmd.sUser.ePhoneNumber)
}

void sUser_ePhoneNumber::SharedCtor() {
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
}

sUser_ePhoneNumber::~sUser_ePhoneNumber() {
  // @@protoc_insertion_point(destructor:BaseCmd.sUser.ePhoneNumber)
  SharedDtor();
}

void sUser_ePhoneNumber::SharedDtor() {
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sUser_ePhoneNumber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* sUser_ePhoneNumber::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sUser_ePhoneNumber& sUser_ePhoneNumber::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_sUser_ePhoneNumber.base);
  return *internal_default_instance();
}


void sUser_ePhoneNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.sUser.ePhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      number_.ClearNonDefaultToEmptyNoArena();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool sUser_ePhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.sUser.ePhoneNumber)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->number().data(), static_cast<int>(this->number().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.sUser.ePhoneNumber.number");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BaseCmd.sUser.ePhoneType type = 2 [default = HOME];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BaseCmd::sUser_ePhoneType_IsValid(value)) {
            set_type(static_cast< ::BaseCmd::sUser_ePhoneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.sUser.ePhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.sUser.ePhoneNumber)
  return false;
#undef DO_
}

void sUser_ePhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.sUser.ePhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), static_cast<int>(this->number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.sUser.ePhoneNumber.number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->number(), output);
  }

  // optional .BaseCmd.sUser.ePhoneType type = 2 [default = HOME];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.sUser.ePhoneNumber)
}

::google::protobuf::uint8* sUser_ePhoneNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.sUser.ePhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), static_cast<int>(this->number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.sUser.ePhoneNumber.number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->number(), target);
  }

  // optional .BaseCmd.sUser.ePhoneType type = 2 [default = HOME];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.sUser.ePhoneNumber)
  return target;
}

size_t sUser_ePhoneNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.sUser.ePhoneNumber)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string number = 1;
  if (has_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->number());
  }
  // optional .BaseCmd.sUser.ePhoneType type = 2 [default = HOME];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void sUser_ePhoneNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.sUser.ePhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const sUser_ePhoneNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sUser_ePhoneNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.sUser.ePhoneNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.sUser.ePhoneNumber)
    MergeFrom(*source);
  }
}

void sUser_ePhoneNumber::MergeFrom(const sUser_ePhoneNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.sUser.ePhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_number();
      number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void sUser_ePhoneNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.sUser.ePhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sUser_ePhoneNumber::CopyFrom(const sUser_ePhoneNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.sUser.ePhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sUser_ePhoneNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void sUser_ePhoneNumber::Swap(sUser_ePhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sUser_ePhoneNumber::InternalSwap(sUser_ePhoneNumber* other) {
  using std::swap;
  number_.Swap(&other->number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata sUser_ePhoneNumber::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void sUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sUser::kNameFieldNumber;
const int sUser::kIdFieldNumber;
const int sUser::kEmailFieldNumber;
const int sUser::kPhonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sUser::sUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_sUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.sUser)
}
sUser::sUser(const sUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      phones_(from.phones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:BaseCmd.sUser)
}

void sUser::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

sUser::~sUser() {
  // @@protoc_insertion_point(destructor:BaseCmd.sUser)
  SharedDtor();
}

void sUser::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* sUser::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sUser& sUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_sUser.base);
  return *internal_default_instance();
}


void sUser::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.sUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phones_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool sUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.sUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.sUser.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.sUser.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BaseCmd.sUser.ePhoneNumber phones = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_phones()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.sUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.sUser)
  return false;
#undef DO_
}

void sUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.sUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.sUser.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional string email = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.sUser.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // repeated .BaseCmd.sUser.ePhoneNumber phones = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->phones_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->phones(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.sUser)
}

::google::protobuf::uint8* sUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.sUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.sUser.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional string email = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.sUser.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // repeated .BaseCmd.sUser.ePhoneNumber phones = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->phones_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->phones(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.sUser)
  return target;
}

size_t sUser::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:BaseCmd.sUser)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t sUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.sUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .BaseCmd.sUser.ePhoneNumber phones = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->phones_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->phones(static_cast<int>(i)));
    }
  }

  // optional string email = 3;
  if (has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void sUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.sUser)
  GOOGLE_DCHECK_NE(&from, this);
  const sUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.sUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.sUser)
    MergeFrom(*source);
  }
}

void sUser::MergeFrom(const sUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.sUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phones_.MergeFrom(from.phones_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void sUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.sUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sUser::CopyFrom(const sUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.sUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->phones())) return false;
  return true;
}

void sUser::Swap(sUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sUser::InternalSwap(sUser* other) {
  using std::swap;
  CastToBase(&phones_)->InternalSwap(CastToBase(&other->phones_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata sUser::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void reqSignin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int reqSignin::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

reqSignin::reqSignin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_reqSignin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.reqSignin)
}
reqSignin::reqSignin(const reqSignin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      user_(from.user_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseCmd.reqSignin)
}

void reqSignin::SharedCtor() {
}

reqSignin::~reqSignin() {
  // @@protoc_insertion_point(destructor:BaseCmd.reqSignin)
  SharedDtor();
}

void reqSignin::SharedDtor() {
}

void reqSignin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* reqSignin::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const reqSignin& reqSignin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_reqSignin.base);
  return *internal_default_instance();
}


void reqSignin::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.reqSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool reqSignin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.reqSignin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BaseCmd.sUser user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.reqSignin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.reqSignin)
  return false;
#undef DO_
}

void reqSignin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.reqSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BaseCmd.sUser user = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.reqSignin)
}

::google::protobuf::uint8* reqSignin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.reqSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BaseCmd.sUser user = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.reqSignin)
  return target;
}

size_t reqSignin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.reqSignin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BaseCmd.sUser user = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void reqSignin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.reqSignin)
  GOOGLE_DCHECK_NE(&from, this);
  const reqSignin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const reqSignin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.reqSignin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.reqSignin)
    MergeFrom(*source);
  }
}

void reqSignin::MergeFrom(const reqSignin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.reqSignin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_.MergeFrom(from.user_);
}

void reqSignin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.reqSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void reqSignin::CopyFrom(const reqSignin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.reqSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqSignin::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->user())) return false;
  return true;
}

void reqSignin::Swap(reqSignin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void reqSignin::InternalSwap(reqSignin* other) {
  using std::swap;
  CastToBase(&user_)->InternalSwap(CastToBase(&other->user_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata reqSignin::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rspSignin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rspSignin::kNameFieldNumber;
const int rspSignin::kSuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rspSignin::rspSignin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_rspSignin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.rspSignin)
}
rspSignin::rspSignin(const rspSignin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  succ_ = from.succ_;
  // @@protoc_insertion_point(copy_constructor:BaseCmd.rspSignin)
}

void rspSignin::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  succ_ = false;
}

rspSignin::~rspSignin() {
  // @@protoc_insertion_point(destructor:BaseCmd.rspSignin)
  SharedDtor();
}

void rspSignin::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rspSignin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rspSignin::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rspSignin& rspSignin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_rspSignin.base);
  return *internal_default_instance();
}


void rspSignin::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.rspSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  succ_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rspSignin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.rspSignin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.rspSignin.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool succ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_succ();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.rspSignin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.rspSignin)
  return false;
#undef DO_
}

void rspSignin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.rspSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.rspSignin.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required bool succ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->succ(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.rspSignin)
}

::google::protobuf::uint8* rspSignin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.rspSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.rspSignin.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required bool succ = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->succ(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.rspSignin)
  return target;
}

size_t rspSignin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:BaseCmd.rspSignin)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_succ()) {
    // required bool succ = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t rspSignin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.rspSignin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required bool succ = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rspSignin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.rspSignin)
  GOOGLE_DCHECK_NE(&from, this);
  const rspSignin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rspSignin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.rspSignin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.rspSignin)
    MergeFrom(*source);
  }
}

void rspSignin::MergeFrom(const rspSignin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.rspSignin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      succ_ = from.succ_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rspSignin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.rspSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rspSignin::CopyFrom(const rspSignin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.rspSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rspSignin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void rspSignin::Swap(rspSignin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rspSignin::InternalSwap(rspSignin* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(succ_, other->succ_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rspSignin::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void reqMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int reqMove::kForwardFieldNumber;
const int reqMove::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

reqMove::reqMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_reqMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.reqMove)
}
reqMove::reqMove(const reqMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&forward_, &from.forward_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&forward_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:BaseCmd.reqMove)
}

void reqMove::SharedCtor() {
  ::memset(&forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&forward_)) + sizeof(angle_));
}

reqMove::~reqMove() {
  // @@protoc_insertion_point(destructor:BaseCmd.reqMove)
  SharedDtor();
}

void reqMove::SharedDtor() {
}

void reqMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* reqMove::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const reqMove& reqMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_reqMove.base);
  return *internal_default_instance();
}


void reqMove::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.reqMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&forward_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&angle_) -
        reinterpret_cast<char*>(&forward_)) + sizeof(angle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool reqMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.reqMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float forward = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_forward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.reqMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.reqMove)
  return false;
#undef DO_
}

void reqMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.reqMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float forward = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->forward(), output);
  }

  // required float angle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.reqMove)
}

::google::protobuf::uint8* reqMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.reqMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float forward = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->forward(), target);
  }

  // required float angle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.reqMove)
  return target;
}

size_t reqMove::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:BaseCmd.reqMove)
  size_t total_size = 0;

  if (has_forward()) {
    // required float forward = 1;
    total_size += 1 + 4;
  }

  if (has_angle()) {
    // required float angle = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t reqMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.reqMove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float forward = 1;
    total_size += 1 + 4;

    // required float angle = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void reqMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.reqMove)
  GOOGLE_DCHECK_NE(&from, this);
  const reqMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const reqMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.reqMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.reqMove)
    MergeFrom(*source);
  }
}

void reqMove::MergeFrom(const reqMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.reqMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      forward_ = from.forward_;
    }
    if (cached_has_bits & 0x00000002u) {
      angle_ = from.angle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void reqMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.reqMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void reqMove::CopyFrom(const reqMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.reqMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqMove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void reqMove::Swap(reqMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void reqMove::InternalSwap(reqMove* other) {
  using std::swap;
  swap(forward_, other->forward_);
  swap(angle_, other->angle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata reqMove::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rspMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rspMove::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rspMove::rspMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_rspMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.rspMove)
}
rspMove::rspMove(const rspMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:BaseCmd.rspMove)
}

void rspMove::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

rspMove::~rspMove() {
  // @@protoc_insertion_point(destructor:BaseCmd.rspMove)
  SharedDtor();
}

void rspMove::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rspMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rspMove::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rspMove& rspMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_rspMove.base);
  return *internal_default_instance();
}


void rspMove::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.rspMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rspMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.rspMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.rspMove.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.rspMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.rspMove)
  return false;
#undef DO_
}

void rspMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.rspMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.rspMove.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.rspMove)
}

::google::protobuf::uint8* rspMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.rspMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.rspMove.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.rspMove)
  return target;
}

size_t rspMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.rspMove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rspMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.rspMove)
  GOOGLE_DCHECK_NE(&from, this);
  const rspMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rspMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.rspMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.rspMove)
    MergeFrom(*source);
  }
}

void rspMove::MergeFrom(const rspMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.rspMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void rspMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.rspMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rspMove::CopyFrom(const rspMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.rspMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rspMove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void rspMove::Swap(rspMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rspMove::InternalSwap(rspMove* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rspMove::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void reqAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int reqAlarm::kInfomessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

reqAlarm::reqAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_reqAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.reqAlarm)
}
reqAlarm::reqAlarm(const reqAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  infomessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_infomessage()) {
    infomessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomessage_);
  }
  // @@protoc_insertion_point(copy_constructor:BaseCmd.reqAlarm)
}

void reqAlarm::SharedCtor() {
  infomessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

reqAlarm::~reqAlarm() {
  // @@protoc_insertion_point(destructor:BaseCmd.reqAlarm)
  SharedDtor();
}

void reqAlarm::SharedDtor() {
  infomessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void reqAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* reqAlarm::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const reqAlarm& reqAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_reqAlarm.base);
  return *internal_default_instance();
}


void reqAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.reqAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    infomessage_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool reqAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.reqAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string infomessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infomessage().data(), static_cast<int>(this->infomessage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.reqAlarm.infomessage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.reqAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.reqAlarm)
  return false;
#undef DO_
}

void reqAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.reqAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string infomessage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomessage().data(), static_cast<int>(this->infomessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.reqAlarm.infomessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infomessage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.reqAlarm)
}

::google::protobuf::uint8* reqAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.reqAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string infomessage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infomessage().data(), static_cast<int>(this->infomessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.reqAlarm.infomessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infomessage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.reqAlarm)
  return target;
}

size_t reqAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.reqAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string infomessage = 1;
  if (has_infomessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->infomessage());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void reqAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.reqAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const reqAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const reqAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.reqAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.reqAlarm)
    MergeFrom(*source);
  }
}

void reqAlarm::MergeFrom(const reqAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.reqAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_infomessage()) {
    set_has_infomessage();
    infomessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infomessage_);
  }
}

void reqAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.reqAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void reqAlarm::CopyFrom(const reqAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.reqAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void reqAlarm::Swap(reqAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void reqAlarm::InternalSwap(reqAlarm* other) {
  using std::swap;
  infomessage_.Swap(&other->infomessage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata reqAlarm::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void rspAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rspAlarm::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rspAlarm::rspAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BaseCmd_2eproto::scc_info_rspAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseCmd.rspAlarm)
}
rspAlarm::rspAlarm(const rspAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:BaseCmd.rspAlarm)
}

void rspAlarm::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

rspAlarm::~rspAlarm() {
  // @@protoc_insertion_point(destructor:BaseCmd.rspAlarm)
  SharedDtor();
}

void rspAlarm::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rspAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rspAlarm::descriptor() {
  ::protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rspAlarm& rspAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BaseCmd_2eproto::scc_info_rspAlarm.base);
  return *internal_default_instance();
}


void rspAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseCmd.rspAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool rspAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseCmd.rspAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseCmd.rspAlarm.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseCmd.rspAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseCmd.rspAlarm)
  return false;
#undef DO_
}

void rspAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseCmd.rspAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.rspAlarm.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseCmd.rspAlarm)
}

::google::protobuf::uint8* rspAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseCmd.rspAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseCmd.rspAlarm.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseCmd.rspAlarm)
  return target;
}

size_t rspAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseCmd.rspAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rspAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseCmd.rspAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const rspAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rspAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseCmd.rspAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseCmd.rspAlarm)
    MergeFrom(*source);
  }
}

void rspAlarm::MergeFrom(const rspAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseCmd.rspAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void rspAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseCmd.rspAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rspAlarm::CopyFrom(const rspAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseCmd.rspAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rspAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void rspAlarm::Swap(rspAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rspAlarm::InternalSwap(rspAlarm* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rspAlarm::GetMetadata() const {
  protobuf_BaseCmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BaseCmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace BaseCmd
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::CmdType* Arena::CreateMaybeMessage< ::BaseCmd::CmdType >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::CmdType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::notifyConnectionStatus* Arena::CreateMaybeMessage< ::BaseCmd::notifyConnectionStatus >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::notifyConnectionStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::sUser_ePhoneNumber* Arena::CreateMaybeMessage< ::BaseCmd::sUser_ePhoneNumber >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::sUser_ePhoneNumber >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::sUser* Arena::CreateMaybeMessage< ::BaseCmd::sUser >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::sUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::reqSignin* Arena::CreateMaybeMessage< ::BaseCmd::reqSignin >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::reqSignin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::rspSignin* Arena::CreateMaybeMessage< ::BaseCmd::rspSignin >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::rspSignin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::reqMove* Arena::CreateMaybeMessage< ::BaseCmd::reqMove >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::reqMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::rspMove* Arena::CreateMaybeMessage< ::BaseCmd::rspMove >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::rspMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::reqAlarm* Arena::CreateMaybeMessage< ::BaseCmd::reqAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::reqAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BaseCmd::rspAlarm* Arena::CreateMaybeMessage< ::BaseCmd::rspAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::BaseCmd::rspAlarm >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
